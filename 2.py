"""
You are given an array of integers a. A new array b is generated by rearranging the elements of a in the following way:

b[0] is equal to a[0];
b[1] is equal to the last element of a;
b[2] is equal to a[1];
b[3] is equal to the second-last element of a;
b[4] is equal to a[2];
b[5] is equal to the third-last element of a;
and so on.
Your task is to determine whether the new array b is sorted in strictly ascending order or not.

Here is how the process of generating the new array b works:



Example

For a = [1, 3, 5, 6, 4, 2], the output should be solution(a) = true.

The new array b will look like [1, 2, 3, 4, 5, 6], which is in strictly ascending order, so the answer is true.

For a = [1, 4, 5, 6, 3], the output should be solution(a) = false.

The new array b will look like [1, 3, 4, 6, 5], which is not in strictly ascending order, so the answer is false.

Input/Output

[execution time limit] 4 seconds (py3)

[input] array.integer a

The given array of integers.

Guaranteed constraints:
1 ≤ a.length ≤ 105,
-109 ≤ a[i] ≤ 109.

[output] boolean

A boolean representing whether the new array b will be sorted in strictly ascending order or not.

[Python 3] Syntax Tips

# Prints help message to the console
# Returns a string
def helloWorld(name):
    print("This prints to the console when you Run Tests")
    return "Hello, " + name

"""
import timeit


def solution(a):
    b, c = [], []
    
    while len(a):
        elem = a.pop(0)
        if elem not in b:
            b.append(elem)
        try:
            elem = a.pop(-1)
            if elem not in b:
                b.append(elem)
        except:
            pass

    c = sorted(b)
    # print(f"{b=}")
    # print(f"{c=}")
    return True if c == b else False


def solution2(a):
    length = len(a)
    b = []
    for i in range(length):
        if i % 2:
            b.append(a[length - (i // 2) - 1])
        else:
            b.append(a[i // 2])                   

    return b


if __name__ == "__main__":
    start_time = timeit.default_timer()
    print(solution([-92, -23, 0, 45, 89, 96, 99, 95, 89, 41, -17, -48]))
    print("The time difference is :", timeit.default_timer() - start_time)
